apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
  labels:
    app: hello
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: hello
        image: nginxdemos/hello:0.4-plain-text
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:1.4
        args:
          - "-nginx.scrape-uri=http://127.0.0.1:80/metrics"
        ports:
        - name: metrics
          containerPort: 9113
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"       
#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/x-forwarded-for: "true"
spec:
  rules:
  - host: myown-website.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: hello
  labels:
    app: hello
  annotations:  
    prometheus.io/scrape: "true"
    prometheus.io/path: "/"
    prometheus.io/port: "80"   
spec:
  selector:
    app: hello
  ports:
    - name: http       
      port: 80
      targetPort: 80
    - name: metrics
      port: 9113
      targetPort: 9113    
  type: ClusterIP
