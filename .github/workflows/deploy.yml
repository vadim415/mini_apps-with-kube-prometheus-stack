# .github/workflows/deploy.yml
name: Testing

on:
  push:
    branches: ["main"]
  

jobs:
  validate:                    
    runs-on: vadim-Inspiron-5548
    env:
      KUBECONFIG: /home/vadim/.kube/config
      HELM_RELEASE: nginxdemos
      HELM_NAMESPACE: demo
      HELM_NAMESPACE_PROM: kube-prometheus-stack

#self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Verify cluster connectivity
        run: |
          kubectl cluster-info
      - name: Set KUBECONFIG
        run: |
          export KUBECONFIG=$HOME/.kube/config
          kubectl config use-context minikube
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0 
      - name: Create namespace if not exists
        run: |
          kubectl get ns $HELM_NAMESPACE || kubectl create ns $HELM_NAMESPACE        
      - name: Checkout repository
        uses: actions/checkout@v3      
      - name: List files and show cwd
        run: |
          ls -la && pwd
     

      - name: Deploy Helm Chart
        run: |
          cd nginxdemos 
          helm upgrade hello-app ./charts -n demo --install --dry-run --debug
            
      - name: Add Helm repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Deploy Kube-prometheus-stack
        run: |
          helm install kube-prometheus-stack \
            --create-namespace --namespace kube-prometheus-stack \
            --prometheus-community/kube-prometheus-stack \
            --wait 
      - name: Dry-run apply Kubernetes manifests
        run: |
          echo "Validating ./deploy_manual_componenets"
          kubectl apply --dry-run=client -f ./deploy_manual_componenets/deploy.yaml

      - name: Validate ServiceMonitor prom-stack
        run: |
          echo "Validating deploy_manual_componenets/service_monitor_prom.yaml"
          kubectl apply --dry-run=client -f ./deploy_manual_componenets/service_monitor_prom.yaml

      - name:  Validate Kubernetes secrets/configs
        run: |
          echo " Validating secrets/configs..."
          if [ -f ./k8s/secrets.yaml ]; then
            kubectl apply --dry-run=client -f ./k8s/secrets.yaml
          else
            echo "No secrets.yaml found â€” skipping..."
          fi

      - name: Done
        run: echo "ok"
